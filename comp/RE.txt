^ : 문자열의 시작
$ : 문자열의 종료. 옵션에 따라 문장의 끝 또는 문서의 끝에 매치된다.
. : 임의의 한 문자
[]: 문자 클래스. 문자 클래스 안에 들어가 있는 문자는 그 바깥에서 하나의 문자로 취급된다.
^ : 문자 클래스 내에서 ^는 not
- : ex) a-z는 a에서 z까지의 문자
| : or를 나타냄
? : 앞 문자가 없거나 하나 있음
+ : 앞 문자가 하나 이상임
* : 앞 문자가 0개 이상임
*?,+?,{n,}? : 게으른 수량자
{n,m} : 앞 문자가 n개 이상 m개 이하. {0,1} 은 ?와 같은 의미다.
{n,} : 앞 문자가 n개 이상. 위의 형태에서 m이 생략된 형태이다. {0,} 이면 *와 같고 {1,} 이면 +와 같은 의미이다.
{n} : 앞 문자가 정확히 n개. {n,n} 과 같은 의미이다.
() : 하나의 패턴구분자 안에 서브 패턴을 지정해서 사용할 경우 괄호로 묶어주는 방식을 사용한다.
\w : 단어 영문자+숫자+_(밑줄) [0-9a-zA-Z_]
\s : 공백문자(띄어쓰기, 탭, 줄 바꿈 문자)
\d : 숫자 [0-9]와 같다.
\b : 문자와 공백 사이를 의미한다
\n : 개행문자
\t : 탭문자
문자 이스케이프는 대문자로 적으면 반대를 의미한다.
[0-9] : 숫자
[a-zA-Z] : 영문자. 패턴변경자를 써서 /^[a-z]*$/i 같이 쓸 수 있다.
[가-힣] : 현대 한글(유니코드를 지원하는 정규식 엔진에 한정)
[ㄱ-ㅣ가-힣] : 한글 자모 낱자를 포함한 모든 현대 한글
[a-zA-Z0-9] : 영문/숫자

i	검색 패턴을 비교할 때 대소문자를 구분하지 않도록 설정함.
g	검색 패턴을 비교할 때 일치하는 모든 부분을 선택하도록 설정함.
m	검색 패턴을 비교할 때 여러 줄의 입력 문자열을 그 상태 그대로 여러 줄로 비교하도록 설정함.
y	대상 문자열의 현재 위치부터 비교를 시작하도록 설정함
</des>

리눅스
*	매칭되는 모든 문자
?	매칭되는 하나의 문자
[]	매칭되는 cahr
[characters]	아래의 문자 매칭
	[[:alnum:]]	알파벳과 숫자
	[[:alpha:]]	알파벳 문자
	[[:digit:]]	숫자 번호
	[[:upper:]]	알파벳 대문자
	[[:lower:]]	알파벳 소문자
[!characters]	[characters] 에 정의한 문자열이 아닌 문자

js
\b : [^&] 대응 문자열 시작,끝에